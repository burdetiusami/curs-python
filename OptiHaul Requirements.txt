OptiHaul

requirements:
-authentification and login:
	- authentification and login for manager:
		- manager can create or delete profiles for each employee
		- manager can edit profiles of each employee
		- manager creates username and password for each employee
		- manager can send orders to employee(loading/unloading order)
	- authentification and login for employee:
		- employee can only login with the credentials given by manager
		- employee cannot create or delete profiles
		- emoplyee cannot edit his profiles or other employee profies

- orders: 
	- orders for manager:
		- manager can send orders to employee(loading/unloading order)
		- manager can delete or edit orders
		- manager can send multiple orders
		- manager can send orders to one or multiple employees

	- orders for employee:
		- emoployee cannot create orders, only receive it
		- employee cannot delete or edit orders
		- employee can receive multiple orders
		- employee can send a completed or uncompleted response to the order 			receiver
		- employee can add specific information to that order on completion
		(picture of loading/unloading papers, damages to the merchandise, 		issues with the order, etc..)

	- orders details:
		- orders have multiple fields that are completed by the manager
			- haulier, shipment_nr, truck, trailer
			- action type(loading/unloading)
				- if loading:
					- loading company, loading adress, loading 						ETA(estimated time of arrival), contact person, 
					phone number
					- type of merchandise, weight, size, observations
					- loading time, number of units, merchandise weight, 
				- if unloading:
					- unloading company, unloading adress, unloading 					ETA(estimated time of arrival), contact, person,					phone number
					- type of merchandise, weight, size, observations
					- loading time, number of units, merchandise weight
				if both(loading/unloading):
					- the order will have 2 sections (for loading and 					unloading), each with the informations specified 					above

				*** 
				Each order has a stop-number, one order can have multiple 				stop-numbers, which means that on order can contain 					multiple loadings/unloadings, each stop-number represents 				an loading/unloading, they're sorted by first-stop to 				last-stop 
				***
				***
				Loadings are received by the consignor/shipper and the 				unloading information might not be available untill the 				loading is finished.
				***
					
		- orders have created_at and edited_at tags.
		- every order ever created is stored in the databased tagged with the 
		employee id or name

- employee route sheet:
	- each employee has a route sheet that is sent manually or automatically at 	the end of the week.
	- route sheet has informations of the truck KM on the first day of the week, 	or when the employee began his shift and KM on the last day of the week, or 	when the employee ended the shift.
	- route sheet has informations on the amount of petrol they have filled 	every week, the location where the fueling happened and the price of the 	petrol.
	- route sheet has every loading/unloading that happend during the week, with 	the day and location of thae loading/unloading
	- informations from the route sheet are processed, an example would be the 	kilometers from start to end. ex. truch has 500.000km at the beginnig of the 	shit, and 502.500km at the end of the shift. the kilometers traveled can be 	then processed to calculate the salary of one employee. If he's being paid 	0.25 cents per kilometer with an average of 2.500km a week the salary would 	be around 2500-EUROS.
		


project/
├── app/
│   ├── migrations/
│   ├── __init__.py
│   ├── admin.py
│   ├── apps.py
│   ├── models.py
│   ├── tests.py
│   ├── urls.py
│   └── views.py
├── project/
│   ├── __init__.py
│   ├── settings.py
│   ├── urls.py
│   └── wsgi.py
├── static/
│   ├── css/
│   ├── fonts/
│   ├── img/
│   └── js/
├── templates/
│   ├── app/
│   └── project/
├── manage.py
└── requirements.txt
